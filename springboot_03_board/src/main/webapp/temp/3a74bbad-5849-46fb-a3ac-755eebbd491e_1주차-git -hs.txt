800시간
수업시간 : 9시30분 ~ 18시20분(매 시 20분마다 휴식)
점심시간 : 13시 30분 ~ 14시 30분

20220906(화) ~ 20220908(목)

https://www.autodraw.com/

▲▲▲20220906 (화)
프로그래밍 순위 사이트
-티오베, w3techs, 구글트랜드, 깃허브

1.웹구축

  front-end : html, css, bootstrap, javascript(중요), jquery, ajax, react
  back-end : java, servlet, jsp, spring legency, spring boot
  database : oracle, mybatis
  
2.빅데이터, 머신러닝

  python
  머신러닝

===============================
[Git, GitHub]
1. Git의 역할 : 버전관리, 협업
2. Git 설치, GitHub 회원가입
===============================
[리눅스 명령어]
$ls => list 목록출력
$ls -a =>숨겨진 폴더 .git 폴더를 볼 수 있다.(숨겨진 폴더들은 모두 앞에 . 으로 시작한다)
$pwd => print working directory 현재위치
$cd => change directory 작업디렉토리 위치 변경
~ : home
/ : 최상위 위치
. : 숨김
.. : 상위폴더
$mkdir => make directory 디렉토리 생성
$touch => 파일 생성
$vi => 텍스트 생성 (working directory에 생성)
wq : write quite 
insert 상태(i누르면 됨)에서 입력 후 esc 누르고 
shift ; 입력 후 wq(소문자) 입력 엔터 => 테스트 저장
$cat => 파일 내용 확인
$rm => 파일삭제
$rm -r => 디렉토리에  파일이 존재할때 삭제
$rm -rf => 모든 깃에 대한 정보가 실질적으로 저장되는 .git 폴더를 삭제 함으로써  repo연결을 해지 할 수 있다.
$rmdir => 빈 디렉토일(파일)일 떄 삭제
$exit => 종료
$clear => 정리
==================================
이메일, 이름 설정방법 및 확인 방법
$git config --global user.email "kaos5930@gmail.com"
$git config --global user.name "hs"
$git config --global user.email
$git config --global user.name

텍스트생성(working directory)
ex) $vi b.txt
working directory ->add -> stage(index)
ex) $git add b.txt  또는 $git add .
stage(index) -> commit -> Local Repository
ex) $git commit -m '20220906 | Add b.txt'     (-m : 메세지)
github 연결
ex)git remote add origin https://github.com/gustmdtmd/mycolorproject.git
github에 올리기
ex) $gir push origin master
origin 연결해제
ex) git remote remove origin
local에서 폴더를 생성시 master, github에서 가져올시 main

$git init : 우리가 repo로 지정하고 싶은 폴더로 이동해 git init를 명령하면 그 폴더가 깃 저장소로 지정되고 초기화된다.
현재 위치해 있는 폴더를 지정하기 때문에 그폴더로 반드시 이동해서 명령해야 한다는 사실을 잊지 말자.
untracked files : 아무것도(add, commit) 안한 텍스트
$git add . -> 모든 텍스트를 add를 해주라
$git status => stage(index)안의 텍스트 확인
$git log => Local Repository안의 텍스트 확인
$git log --oneline => 축약해서 보여줌
$git clone github 파일 주소 => 폴더만들기. 단 master 밖으로 나와서 실행.
$git pull origin master =>github에서 변경한 코드를 가져올때
$git commit -m '20220906 | Update monitor.txt' => github에 이미 있는 코드에 추가할때
ctrl c
vscode에서 추가시
저장 -> git add -> git commit -> git push
Visual Studio Code
===========================================================================
===========================================================================
===========================================================================


▲▲▲20220907 (수)
gitignore.io => 제외시킬것들 찾아주는 ? 사이트
windows/ java/ visual studio code 등등 한번에 검색 후 나오는 전체 복사(ctrl a -> ctrl c)해서 .gitignore에 입력.

※
vs code에서 파일 -> 폴더 열기 -> 폴더 새로 생성 -> 새파일만들기( 필요한거 다만들고 시작)

.gitignore => 배포에서 제외시킬것을 입력
ex) b.txt => 본인만 제외
     b.* => b. 모두 제외
     *.jpg =>.jpg 모두 제외
     sample/ => 폴더 제외
README.md => 설명서 작성? 마크다운https://dillinger.io/

★★★꼭 저장 먼저 할 것.★★★

#저장 안하고 했을때
★cd .. => ls => cd my-second-project(작업하던 파일) => rm .git(파일삭제) 또는 rm -rf .git(폴더삭제) 끝
★가장 먼저 저장!!! => git init => git add .=> git commit -m '  '(이때 제외시킨게 됐는지 확인) 
   =>  git remote add origin github 주소 => git push origin master
※

commit은 서로 연결되는 것들로 올리는 좋음. 
그래서 add 후에 하나를 빼기 위해선 git restor --staged 파일이름 입력하면 입력한 파일 이름이 빠짐

commit은 이미 담겨져있는것만 push가능함
만약 commit에 파일추가하고 싶을때 git commit --amend 입력 후 추가 입력.(남용하는건 좋지않음.)

##끝말잇기
vs code에서 폴더 생성 -> 파일 README.md 생성 -> github에 생성 -> vs code에 입력(꼭 저장!) 
-> github에 올리기 -> 설정에서 조원들 초대(조원이 설정한 아이디로 검색) 
-> 각 조원이 자신의 이메일에서 동의 완료 
-> 폴더 열고 git clone github주소 입력 (master 밖으로 나와야함 : cd ..)
-> git pull origin master 입력 (정보가져오기)
-> 1. 1명이 입력후 저장 -> 2.git add . -> 3.git commit -m '' -> 4.git push origin master
-> 5.조원 다음순서 git pull origin master (1~5반복) 

=======================================
https://dillinger.io/  =>  마크다운 무료 온라인사이트
https://startbootstrap.com/ => bootstrap 사이트?
https://gustmdtmd.github.io/

제목 => # ㅇㅇ 제목은 최대 6까지가능
선긋기 =>***
> =>강조?와 줄바뀜
spacebar 3번 => 줄바꿈
1. => 번호가 붙음
*  => 
tap * => 뛰어쓰기?
 ```~``` => java, html 등 표시 
![이미지가 무엇인지 알려주는 이름](이미지 주소)

표만들기 => | |
|번호|이름|지역|
|---|---|---| => 기본적으로 좌로 정렬인데 
                     가운데 정렬원할땐 |:---:|:---:|:---:|
                     우로 정렬원할땐    |---:|---:|---:|

기울기 => _ 단어_
굵기=> **단어** , __단어__
굵기+ 기울기 => ***단어***
최소선 => ~~단어~~
굵기+취소=>**~~단어~~**
=====================================================

★vs code와 github에 있는 파일이 다를 경우
git add . -> git commit -m ' ' -> git push -> git pull 
-> git add . -> git commit -m ' ' -> git push 
github에서 먼저 가져온 후 다시 github에 올린다.

★vs code와 github에 있는 파일안의 내용이 다를 경우
(다른 사람이 이미 github에 push하고 나도 push하면 충돌발생)
git add . -> git commit -m ' ' -> git push -> git pull  충돌이 일어나는데 이때 둘중 하나 골라준후
-> git add . -> git commit -m ' ' -> git push 
 
fontawesome
icons
skills

배운거 반복하기 add, commit, push 익숙해지기!
================================================================
================================================================
================================================================

▲▲▲20220908 (목)

★메세지(에러 났을때 나오는 메세지)보는게 중요!

★branch 생성, 병합, 제거
$git branch => branch 확인 (*붙어있는게 사용중인 branch)
$git branch 단어 => 새로운 branch 생성
$git switch 다른branch => branch 변경
github 병합요청 => pull request

@branch가 더이상 필요없을떄 제거   
=> github에서 병합 해제
=> pull로 가져온 후 git branch -d 제거할 branch
=> 강제제거 (권장하지않음) : git branch -D 제거할 branch

@다른  사람 github에서 나의 github로 가져오기
your github -> fork -> my github
===========================================================

▲언어프로그래밍

인코딩 (디코딩)
문자코드 :  문자와 숫자를 1:1로 매핑시켜 놓은 값이다.
                컴퓨터가 사용하는 0과 1로 변환할 때 사용되는 기준
진법(진수) : 10(사람), 2, 8 ,16

기계 : 0과 1만 사용(2진법)
ASKII코드 값
'a' : 97
'A' : 65
'0' : 48

        10진법  2진법
숫자 :    5       101
문자 :   'A'      01000001(byte)

code page : 각 나라별로 제공 (한국 : cp949)
★★★문자코드  
 -ASCII코드(7비트) 
 -확장 ASCII코드(= ANSI코드 : 8비트) => 영어권이 아닌 다른 언어를 사용하는 나라는 7비트는 작기때문에  ANSI코드 : 8비트를 이용
 -유니코드
 -EUC_KR코드

★★★인코딩
 -ASCII인코딩
 -유니코드(utf-8, utf-16, utf-32)
 -ECU-KR인코딩

@진법 종류
Bit : 0과 1만 표현
Byte : 8비트 저장 가능
 
-2진법 : 0과 1
-8진법 : 0~7
-10진법 : 0~9
-16진법 : 0~9 A(10) B(11) C(12) D(13) E(14) F(15)

10진수/2 -> 2진수 
10진수/8 -> 8진수
10진수/16 -> 16진수

!!!!!!모두 해야함!!!!!!
Front-end(HTML/ CSS/ Bootstrap/ JavaScript/ DOM/ jQuery/ React) 
Back-end(Java/ Servlet/ Jsp/ Spring/ Spring Boot)  
Database(oracle)

공식 사이트 모음!!!!! (Front-end)
https://developer.mozilla.org/ko/docs/Web/HTML => HTML 기본교과서 같은 사이트.
https://www.w3schools.com/ => 언어프로그래밍 모아져 있고 실행도 해볼 수 있어서 좋다.
https://getbootstrap.com/
https://jquery.com/ 자주 보면서 익숙해져야한다. 자주 바뀜 주의...
https://reactjs.org/

=============================================================
@html
vs code 셋팅(기본적인 필요한 것들 설치 - 너무 많이 설치하면 컴퓨터가 무거워져서 안좋다)
setting => quotes => javascript&typescript single&html로 변경
extension => auto rename 설치 => setting default format 검색 => Prettier default format로 변경=> format on save 검색 후 체크
extension => html to css 검색 HTML to CSS completion 설치-CSS에서 코딩할때 HTML에서 사용한 속성이름을 자동 완성해주는 기능을 지원한다.
extension => css to html 검색 HTML CSS Support 설치
extension => live server
=> open with live server - 페이지가 뜸(메세지 입력 시 바로 페이지에 자동입력됨)

웹은 chrome
! Enter => 기본세팅 
window키+ ; => 이모티콘
<head></head> => 설정 및 제목 입력
<body></body> => 홈페이지 꾸미기
<title>~~~</title> =>페이지 창이름
<!~~~~> => 주석
<h2>문서의 제목을 표시할 때 사용되는 요소이다.</h2>
<span>인라인의 대표적인 요소이다.</span>
<div>블록의 대표적인 요소이다.</div>
<style type="text/css"></style> => 색 넣어주는 요소
<script>console.log("javascript");</script> => 홈페이지 F12 console에서 확인가능
